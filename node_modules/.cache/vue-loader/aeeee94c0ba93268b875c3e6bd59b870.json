{"remainingRequest":"D:\\myDoctor-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\myDoctor-web\\src\\views\\Schedule.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\myDoctor-web\\src\\views\\Schedule.vue","mtime":1561660051143},{"path":"D:\\myDoctor-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\myDoctor-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\myDoctor-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\myDoctor-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\n// @ is an alias to /src\r\nexport default {\r\n  name: \"schedule\",\r\n  components: {},\r\n  computed: {\r\n    secondOption() {\r\n      return this.options.filter(item => item.value > this.hourOpen);\r\n    },\r\n    optionsDays() {\r\n      return this.daysWeek.filter(\r\n        item =>\r\n          item.value === this.dayOfWeek ||\r\n          !this.schedules\r\n            .map(schedule => schedule.dayOfWeek)\r\n            .includes(item.value)\r\n      );\r\n    },\r\n    selectedDoctor() {\r\n      let item = null;\r\n      if (this.selected) {\r\n        const split = this.selected.split(\" \");\r\n        const firstname = split[0];\r\n        const lastname = split[1];\r\n        const index = this.items.findIndex(\r\n          item => item.firstname === firstname && item.lastname === lastname\r\n        );\r\n        item = this.items[index];\r\n      }\r\n      return item;\r\n    }\r\n  },\r\n  data: () => {\r\n    return {\r\n      fields: {\r\n        dayOfWeek: {\r\n          label: \"Dzień tygodnia\"\r\n        },\r\n        hourOpen: {\r\n          label: \"Godzina rozpoczęcia\"\r\n        },\r\n        hourClose: {\r\n          label: \"Godzina zakończenia\"\r\n        }\r\n      },\r\n      daysWeek: [\r\n        { value: 0, text: \"Poniedziałek\" },\r\n        { value: 1, text: \"Wtorek\" },\r\n        { value: 2, text: \"Środa\" },\r\n        { value: 3, text: \"Czwartek\" },\r\n        { value: 4, text: \"Piątek\" },\r\n        { value: 5, text: \"Sobota\" },\r\n        { value: 6, text: \"Niedziela\" }\r\n      ],\r\n      items: [],\r\n      selected: \"\",\r\n      schedules: [],\r\n      visible: false,\r\n      days: [\r\n        \"Poniedziałek\",\r\n        \"Wtorek\",\r\n        \"Środa\",\r\n        \"Czwartek\",\r\n        \"Piątek\",\r\n        \"Sobota\",\r\n        \"Niedziela\"\r\n      ],\r\n      options: [],\r\n      dayOfWeek: -1,\r\n      hourOpen: 0,\r\n      hourClose: 0,\r\n      selectedSchedule: null\r\n    };\r\n  },\r\n  methods: {\r\n    select(items) {\r\n      this.selectedSchedule = items[0];\r\n    },\r\n    remove() {\r\n      const { dayOfWeek, id } = this.selectedSchedule;\r\n      this.$bvModal\r\n        .msgBoxConfirm(\r\n          `Czy chcesz usunąć harmonogram ${this.days[dayOfWeek]} ?`,\r\n          {\r\n            title: \"Usuwanie harmonogramu\",\r\n            size: \"sm\",\r\n            buttonSize: \"sm\",\r\n            okVariant: \"secondary\",\r\n            cancelVariant: \"primary\",\r\n            okTitle: \"Usuń\",\r\n            cancelTitle: \"Nie\",\r\n            footerClass: \"p-2\",\r\n            hideHeaderClose: true,\r\n            centered: true\r\n          }\r\n        )\r\n        .then(async () => {\r\n          const response = await this.$api.delete(`schedule/remove/${id}`);\r\n          const data = response.data;\r\n          if (data.item) {\r\n            this.$bvToast.toast(\"Usunięto dane.\", {\r\n              title: \"Usuwanie harmonogramu.\",\r\n              autoHideDelay: 5000\r\n            });\r\n               this.getSchedule();\r\n          }\r\n          if (data.error) {\r\n            const error = data.error;\r\n            if (error.original)\r\n              this.$bvToast.toast(error.original.detail, {\r\n                title: \"Usuwanie harmonogramu.\",\r\n                autoHideDelay: 5000,\r\n                appendToast: true\r\n              });\r\n            if (error.errors.length) {\r\n              let description = \"\";\r\n              description = error.errors.map(error => error.path).join(\", \");\r\n              this.$bvToast.toast(`Niepoprawne dane w polach ${description}.`, {\r\n                title: \"Usuwanie harmonogramu.\",\r\n                autoHideDelay: 5000,\r\n                appendToast: true\r\n              });\r\n            }\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    },\r\n    edit() {\r\n      const { dayOfWeek, hourOpen, hourClose } = this.selectedSchedule;\r\n      this.dayOfWeek = dayOfWeek;\r\n      this.hourOpen = Number(hourOpen.split(\":\")[0]);\r\n      this.hourClose = Number(hourClose.split(\":\")[0]);\r\n      this.visible = true;\r\n    },\r\n    add() {\r\n      this.visible = true;\r\n    },\r\n    cancel() {\r\n      this.hourOpen = 0;\r\n      this.hourClose = 0;\r\n      this.dayOfWeek = -1;\r\n      this.selectedSchedule = null;\r\n      this.$refs.table.clearSelected();\r\n    },\r\n    async ok() {\r\n      let change = false;\r\n      if (this.selected && this.selectedSchedule) {\r\n        const response = await this.$api.post(`schedule/edit`, {\r\n          id: this.selectedSchedule.id,\r\n          dayOfWeek: this.dayOfWeek,\r\n          hourOpen: `${this.hourOpen < 10 ? \"0\" : \"\"}${this.hourOpen}:00:00`,\r\n          hourClose: `${this.hourClose < 10 ? \"0\" : \"\"}${this.hourClose}:00:00`\r\n        });\r\n        const data = response.data;\r\n        if (data.item) {\r\n          this.$bvToast.toast(\"Dane zmienione.\", {\r\n            title: \"Edycja harmonogramu.\",\r\n            autoHideDelay: 5000\r\n          });\r\n          change = true;\r\n        }\r\n        if (data.error) {\r\n          const error = data.error;\r\n          if (error.original)\r\n            this.$bvToast.toast(error.original.detail, {\r\n              title: \"Edycja harmonogramu.\",\r\n              autoHideDelay: 5000,\r\n              appendToast: true\r\n            });\r\n          if (error.errors.length) {\r\n            let description = \"\";\r\n            description = error.errors.map(error => error.path).join(\", \");\r\n            this.$bvToast.toast(`Niepoprawne dane w polach ${description}.`, {\r\n              title: \"Edycja harmonogramu.\",\r\n              autoHideDelay: 5000,\r\n              appendToast: true\r\n            });\r\n          }\r\n        }\r\n      } else {\r\n        const response = await this.$api.post(`schedule/add`, {\r\n          doctorId: this.selectedDoctor.id,\r\n          dayOfWeek: this.dayOfWeek,\r\n          hourOpen: `${this.hourOpen < 10 ? \"0\" : \"\"}${this.hourOpen}:00:00`,\r\n          hourClose: `${this.hourClose < 10 ? \"0\" : \"\"}${this.hourClose}:00:00`\r\n        });\r\n        const data = response.data;\r\n        if (data.item) {\r\n          this.$bvToast.toast(\"Dodano harmonogram.\", {\r\n            title: \"Dodawanie harmonogramu.\",\r\n            autoHideDelay: 5000\r\n          });\r\n          change = true;\r\n        }\r\n        if (data.error) {\r\n          const error = data.error;\r\n          if (error.original)\r\n            this.$bvToast.toast(error.original.detail, {\r\n              title: \"Dodawanie harmonogramu.\",\r\n              autoHideDelay: 5000,\r\n              appendToast: true\r\n            });\r\n          if (error.errors.length) {\r\n            let description = \"\";\r\n            description = error.errors.map(error => error.path).join(\", \");\r\n            this.$bvToast.toast(`Niepoprawne dane w polach ${description}.`, {\r\n              title: \"Dodawanie harmonogramu.\",\r\n              autoHideDelay: 5000,\r\n              appendToast: true\r\n            });\r\n          }\r\n        }\r\n      }\r\n      if (change) {\r\n        this.$refs.table.clearSelected();\r\n        this.getSchedule();\r\n        this.dayOfWeek = -1;\r\n        this.hourOpen = 0;\r\n        this.hourClose = 0;\r\n      }\r\n    },\r\n    getSchedule() {\r\n      if (this.selected.length > 0) {\r\n        this.$api\r\n          .get(`schedule/search/${this.selectedDoctor.id}`)\r\n          .then(response => {\r\n            this.schedules = response.data.item;\r\n          })\r\n          .catch(error => {\r\n            console.log(error);\r\n          });\r\n      } else {\r\n        this.schedules = [];\r\n      }\r\n    },\r\n    loadDoctors() {\r\n      this.$api\r\n        .get(`alldoctors`)\r\n        .then(response => {\r\n          this.items = response.data.items;\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    },\r\n    createdOptions() {\r\n      for (let i = 8; i <= 22; i++) {\r\n        this.options.push({ value: i, text: `${i < 10 ? \"0\" : \"\"}${i}:00:00` });\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.loadDoctors();\r\n    this.createdOptions();\r\n  }\r\n};\r\n",{"version":3,"sources":["Schedule.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"Schedule.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div id=\"schedule\">\r\n    <h1>Harmonogram</h1>\r\n    <div class=\"form\">\r\n      <b-form-input\r\n        list=\"my-list-id\"\r\n        v-model=\"selected\"\r\n        @change=\"getSchedule\"\r\n        placeholder=\"Wybierz lekarza\"\r\n      ></b-form-input>\r\n      <datalist id=\"my-list-id\">\r\n        <option\r\n          v-for=\"schedule in items\"\r\n          v-bind:key=\"schedule.id\"\r\n        >{{ schedule.firstname + ' '+schedule.lastname}}</option>\r\n      </datalist>\r\n      <div class=\"searchBar\">\r\n        <b-button\r\n          variant=\"primary\"\r\n          :disabled=\"!selectedDoctor || !!selectedSchedule || schedules.length == 7\"\r\n          @click=\"add\"\r\n        >Dodaj</b-button>\r\n        <b-button\r\n          variant=\"secondary\"\r\n          :disabled=\"!selectedDoctor || !selectedSchedule\"\r\n          @click=\"edit\"\r\n        >Edytuj</b-button>\r\n        <b-button\r\n          variant=\"danger\"\r\n          :disabled=\"!selectedDoctor || !selectedSchedule\"\r\n          @click=\"remove\"\r\n        >Usuń</b-button>\r\n      </div>\r\n      <b-table\r\n        ref=\"table\"\r\n        selectable\r\n        select-mode=\"single\"\r\n        striped\r\n        hover\r\n        small\r\n        fixed\r\n        :items=\"schedules\"\r\n        :fields=\"fields\"\r\n        show-empty\r\n        @row-selected=\"select\"\r\n      >\r\n        <template slot=\"dayOfWeek\" slot-scope=\"data\">{{ days[data.item.dayOfWeek] }}</template>\r\n      </b-table>\r\n    </div>\r\n    <b-modal\r\n      :title=\"!selectedDoctor?'Edycja harmonogramu':'Dodanie harmonogramu'\"\r\n      centered\r\n      no-close-on-backdrop\r\n      no-close-on-esc\r\n      v-model=\"visible\"\r\n      @ok=\"ok\"\r\n      @cancel=\"cancel\"\r\n    >\r\n      <div>\r\n        <b-form-select class=\"mb-3\" v-model=\"dayOfWeek\" :options=\"optionsDays\"></b-form-select>\r\n        <b-form-select :options=\"options\" class=\"mb-3\" v-model=\"hourOpen\"></b-form-select>\r\n        <b-form-select :options=\"secondOption\" class=\"mb-3\" v-model=\"hourClose\"></b-form-select>\r\n      </div>\r\n    </b-modal>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// @ is an alias to /src\r\nexport default {\r\n  name: \"schedule\",\r\n  components: {},\r\n  computed: {\r\n    secondOption() {\r\n      return this.options.filter(item => item.value > this.hourOpen);\r\n    },\r\n    optionsDays() {\r\n      return this.daysWeek.filter(\r\n        item =>\r\n          item.value === this.dayOfWeek ||\r\n          !this.schedules\r\n            .map(schedule => schedule.dayOfWeek)\r\n            .includes(item.value)\r\n      );\r\n    },\r\n    selectedDoctor() {\r\n      let item = null;\r\n      if (this.selected) {\r\n        const split = this.selected.split(\" \");\r\n        const firstname = split[0];\r\n        const lastname = split[1];\r\n        const index = this.items.findIndex(\r\n          item => item.firstname === firstname && item.lastname === lastname\r\n        );\r\n        item = this.items[index];\r\n      }\r\n      return item;\r\n    }\r\n  },\r\n  data: () => {\r\n    return {\r\n      fields: {\r\n        dayOfWeek: {\r\n          label: \"Dzień tygodnia\"\r\n        },\r\n        hourOpen: {\r\n          label: \"Godzina rozpoczęcia\"\r\n        },\r\n        hourClose: {\r\n          label: \"Godzina zakończenia\"\r\n        }\r\n      },\r\n      daysWeek: [\r\n        { value: 0, text: \"Poniedziałek\" },\r\n        { value: 1, text: \"Wtorek\" },\r\n        { value: 2, text: \"Środa\" },\r\n        { value: 3, text: \"Czwartek\" },\r\n        { value: 4, text: \"Piątek\" },\r\n        { value: 5, text: \"Sobota\" },\r\n        { value: 6, text: \"Niedziela\" }\r\n      ],\r\n      items: [],\r\n      selected: \"\",\r\n      schedules: [],\r\n      visible: false,\r\n      days: [\r\n        \"Poniedziałek\",\r\n        \"Wtorek\",\r\n        \"Środa\",\r\n        \"Czwartek\",\r\n        \"Piątek\",\r\n        \"Sobota\",\r\n        \"Niedziela\"\r\n      ],\r\n      options: [],\r\n      dayOfWeek: -1,\r\n      hourOpen: 0,\r\n      hourClose: 0,\r\n      selectedSchedule: null\r\n    };\r\n  },\r\n  methods: {\r\n    select(items) {\r\n      this.selectedSchedule = items[0];\r\n    },\r\n    remove() {\r\n      const { dayOfWeek, id } = this.selectedSchedule;\r\n      this.$bvModal\r\n        .msgBoxConfirm(\r\n          `Czy chcesz usunąć harmonogram ${this.days[dayOfWeek]} ?`,\r\n          {\r\n            title: \"Usuwanie harmonogramu\",\r\n            size: \"sm\",\r\n            buttonSize: \"sm\",\r\n            okVariant: \"secondary\",\r\n            cancelVariant: \"primary\",\r\n            okTitle: \"Usuń\",\r\n            cancelTitle: \"Nie\",\r\n            footerClass: \"p-2\",\r\n            hideHeaderClose: true,\r\n            centered: true\r\n          }\r\n        )\r\n        .then(async () => {\r\n          const response = await this.$api.delete(`schedule/remove/${id}`);\r\n          const data = response.data;\r\n          if (data.item) {\r\n            this.$bvToast.toast(\"Usunięto dane.\", {\r\n              title: \"Usuwanie harmonogramu.\",\r\n              autoHideDelay: 5000\r\n            });\r\n               this.getSchedule();\r\n          }\r\n          if (data.error) {\r\n            const error = data.error;\r\n            if (error.original)\r\n              this.$bvToast.toast(error.original.detail, {\r\n                title: \"Usuwanie harmonogramu.\",\r\n                autoHideDelay: 5000,\r\n                appendToast: true\r\n              });\r\n            if (error.errors.length) {\r\n              let description = \"\";\r\n              description = error.errors.map(error => error.path).join(\", \");\r\n              this.$bvToast.toast(`Niepoprawne dane w polach ${description}.`, {\r\n                title: \"Usuwanie harmonogramu.\",\r\n                autoHideDelay: 5000,\r\n                appendToast: true\r\n              });\r\n            }\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    },\r\n    edit() {\r\n      const { dayOfWeek, hourOpen, hourClose } = this.selectedSchedule;\r\n      this.dayOfWeek = dayOfWeek;\r\n      this.hourOpen = Number(hourOpen.split(\":\")[0]);\r\n      this.hourClose = Number(hourClose.split(\":\")[0]);\r\n      this.visible = true;\r\n    },\r\n    add() {\r\n      this.visible = true;\r\n    },\r\n    cancel() {\r\n      this.hourOpen = 0;\r\n      this.hourClose = 0;\r\n      this.dayOfWeek = -1;\r\n      this.selectedSchedule = null;\r\n      this.$refs.table.clearSelected();\r\n    },\r\n    async ok() {\r\n      let change = false;\r\n      if (this.selected && this.selectedSchedule) {\r\n        const response = await this.$api.post(`schedule/edit`, {\r\n          id: this.selectedSchedule.id,\r\n          dayOfWeek: this.dayOfWeek,\r\n          hourOpen: `${this.hourOpen < 10 ? \"0\" : \"\"}${this.hourOpen}:00:00`,\r\n          hourClose: `${this.hourClose < 10 ? \"0\" : \"\"}${this.hourClose}:00:00`\r\n        });\r\n        const data = response.data;\r\n        if (data.item) {\r\n          this.$bvToast.toast(\"Dane zmienione.\", {\r\n            title: \"Edycja harmonogramu.\",\r\n            autoHideDelay: 5000\r\n          });\r\n          change = true;\r\n        }\r\n        if (data.error) {\r\n          const error = data.error;\r\n          if (error.original)\r\n            this.$bvToast.toast(error.original.detail, {\r\n              title: \"Edycja harmonogramu.\",\r\n              autoHideDelay: 5000,\r\n              appendToast: true\r\n            });\r\n          if (error.errors.length) {\r\n            let description = \"\";\r\n            description = error.errors.map(error => error.path).join(\", \");\r\n            this.$bvToast.toast(`Niepoprawne dane w polach ${description}.`, {\r\n              title: \"Edycja harmonogramu.\",\r\n              autoHideDelay: 5000,\r\n              appendToast: true\r\n            });\r\n          }\r\n        }\r\n      } else {\r\n        const response = await this.$api.post(`schedule/add`, {\r\n          doctorId: this.selectedDoctor.id,\r\n          dayOfWeek: this.dayOfWeek,\r\n          hourOpen: `${this.hourOpen < 10 ? \"0\" : \"\"}${this.hourOpen}:00:00`,\r\n          hourClose: `${this.hourClose < 10 ? \"0\" : \"\"}${this.hourClose}:00:00`\r\n        });\r\n        const data = response.data;\r\n        if (data.item) {\r\n          this.$bvToast.toast(\"Dodano harmonogram.\", {\r\n            title: \"Dodawanie harmonogramu.\",\r\n            autoHideDelay: 5000\r\n          });\r\n          change = true;\r\n        }\r\n        if (data.error) {\r\n          const error = data.error;\r\n          if (error.original)\r\n            this.$bvToast.toast(error.original.detail, {\r\n              title: \"Dodawanie harmonogramu.\",\r\n              autoHideDelay: 5000,\r\n              appendToast: true\r\n            });\r\n          if (error.errors.length) {\r\n            let description = \"\";\r\n            description = error.errors.map(error => error.path).join(\", \");\r\n            this.$bvToast.toast(`Niepoprawne dane w polach ${description}.`, {\r\n              title: \"Dodawanie harmonogramu.\",\r\n              autoHideDelay: 5000,\r\n              appendToast: true\r\n            });\r\n          }\r\n        }\r\n      }\r\n      if (change) {\r\n        this.$refs.table.clearSelected();\r\n        this.getSchedule();\r\n        this.dayOfWeek = -1;\r\n        this.hourOpen = 0;\r\n        this.hourClose = 0;\r\n      }\r\n    },\r\n    getSchedule() {\r\n      if (this.selected.length > 0) {\r\n        this.$api\r\n          .get(`schedule/search/${this.selectedDoctor.id}`)\r\n          .then(response => {\r\n            this.schedules = response.data.item;\r\n          })\r\n          .catch(error => {\r\n            console.log(error);\r\n          });\r\n      } else {\r\n        this.schedules = [];\r\n      }\r\n    },\r\n    loadDoctors() {\r\n      this.$api\r\n        .get(`alldoctors`)\r\n        .then(response => {\r\n          this.items = response.data.items;\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    },\r\n    createdOptions() {\r\n      for (let i = 8; i <= 22; i++) {\r\n        this.options.push({ value: i, text: `${i < 10 ? \"0\" : \"\"}${i}:00:00` });\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.loadDoctors();\r\n    this.createdOptions();\r\n  }\r\n};\r\n</script>\r\n<style scoped>\r\n#schedule {\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n.form {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n}\r\n.searchBar {\r\n  display: flex;\r\n  width: 100%;\r\n  padding: 10px 0px;\r\n}\r\nbutton {\r\n}\r\n</style>\r\n"]}]}