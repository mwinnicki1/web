{"remainingRequest":"D:\\myDoctor-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\myDoctor-web\\src\\views\\Visit.vue?vue&type=style&index=0&id=78ff13fe&scoped=true&lang=css&","dependencies":[{"path":"D:\\myDoctor-web\\src\\views\\Visit.vue","mtime":1561666877123},{"path":"D:\\myDoctor-web\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"D:\\myDoctor-web\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\myDoctor-web\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\myDoctor-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\myDoctor-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n#visit {\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n.searchBar {\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: flex-start;\r\n  align-items: flex-start;\r\n  padding: 5px 0px;\r\n}\r\n.button-container {\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: flex-end;\r\n  padding-right: 0px;\r\n}\r\n",{"version":3,"sources":["Visit.vue"],"names":[],"mappingsfile":"Visit.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div id=\"visit\">\r\n    <h1>Wizyty</h1>\r\n    <div class=\"searchBar\">\r\n      <b-button variant=\"primary\" :disabled=\"!!selected\" @click=\"add\">Dodaj</b-button>\r\n      <b-button variant=\"secondary\" :disabled=\"!selected\" @click=\"edit\">Edytuj</b-button>\r\n      <b-button variant=\"danger\" :disabled=\"!selected\" @click=\"remove\">Usuń</b-button>\r\n    </div>\r\n    <!-- <div class=\"searchBar\">\r\n      <b-form-select v-model=\"selectedDoctor\" :options=\"filterDoctors\" class=\"col-3\"></b-form-select>\r\n      <b-form-input v-model=\"selectedDate\" type=\"date\" class=\"col-3\"></b-form-input>\r\n      <b-form-select v-model=\"selectedPantient\" :options=\"filterPantients\" class=\"col-3\"></b-form-select>\r\n    </div>-->\r\n    <b-table\r\n      ref=\"table\"\r\n      selectable\r\n      select-mode=\"single\"\r\n      @row-selected=\"select\"\r\n      striped\r\n      hover\r\n      small\r\n      fixed\r\n      :items=\"items\"\r\n      :fields=\"fields\"\r\n    >\r\n      <template slot=\"date\" slot-scope=\"data\">{{ getDate(data.item.date) }}</template>\r\n    </b-table>\r\n    <b-pagination\r\n      v-model=\"page\"\r\n      :total-rows=\"totalPage\"\r\n      per-page=\"1\"\r\n      class=\"my-0\"\r\n      @change=\"changePage\"\r\n    ></b-pagination>\r\n    <b-modal\r\n      ref=\"edit\"\r\n      :title=\"selected !== null ? 'Edycja wizyty':'Dodaj wizytę'\"\r\n      centered\r\n      @ok=\"ok\"\r\n      @cancel=\"cancel\"\r\n    >\r\n      <b-form-input\r\n        list=\"doctors\"\r\n        v-model=\"editDoctor\"\r\n        placeholder=\"Wybierz lekarza\"\r\n        @change=\"changeDoctor\"\r\n      ></b-form-input>\r\n      <datalist id=\"doctors\">\r\n        <option\r\n          v-for=\"doctor in doctors\"\r\n          v-bind:key=\"doctor.id\"\r\n        >{{ doctor.firstname + ' '+doctor.lastname}}</option>\r\n      </datalist>\r\n      <b-form-input list=\"pantients\" v-model=\"editPantient\" placeholder=\"Wybierz pacjenta\"></b-form-input>\r\n      <datalist id=\"pantients\">\r\n        <option\r\n          v-for=\"pantient in pantients\"\r\n          v-bind:key=\"pantient.id\"\r\n        >{{ pantient.firstname + ' '+pantient.lastname}}</option>\r\n      </datalist>\r\n      <b-form-input list=\"dates\" v-model=\"editDate\" placeholder=\"Wybierz datę\" @change=\"changeDate\"></b-form-input>\r\n      <datalist id=\"dates\">\r\n        <option v-for=\"day in freeDay\" v-bind:key=\"day\">{{ day }}</option>\r\n      </datalist>\r\n      <b-form-input\r\n        list=\"hours\"\r\n        v-model=\"editTime\"\r\n        placeholder=\"Wybierz godzinę\"\r\n        @change=\"changeHour\"\r\n      ></b-form-input>\r\n      <datalist id=\"hours\">\r\n        <option v-for=\"hour in freeHour\" v-bind:key=\"hour\">{{ hour }}</option>\r\n      </datalist>\r\n      <b-form-input v-model=\"editDescription\" placeholder=\"Podaj opis\" type=\"text\"></b-form-input>\r\n    </b-modal>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport moment from \"moment\";\r\nexport default {\r\n  name: \"visit\",\r\n  components: {},\r\n  computed: {\r\n    selectedDoctor() {\r\n      let item = null;\r\n      if (this.editDoctor) {\r\n        const split = this.editDoctor.split(\" \");\r\n        const firstname = split[0];\r\n        const lastname = split[1];\r\n        item = this.doctors.find(\r\n          item => item.firstname === firstname && item.lastname === lastname\r\n        );\r\n      }\r\n      return item;\r\n    },\r\n    selectedPantient() {\r\n      let item = null;\r\n      if (this.editPantient) {\r\n        const split = this.editPantient.split(\" \");\r\n        const firstname = split[0];\r\n        const lastname = split[1];\r\n        item = this.pantients.find(\r\n          item => item.firstname === firstname && item.lastname === lastname\r\n        );\r\n      }\r\n      return item;\r\n    }\r\n  },\r\n  data: () => {\r\n    return {\r\n      fields: {\r\n        doctor: {\r\n          label: \"Doktor\",\r\n          sortable: true\r\n        },\r\n        date: {\r\n          label: \"Godzina i data wizyty\",\r\n          sortable: true\r\n        },\r\n        pantient: {\r\n          label: \"Nazwisko i imię pacjenta\",\r\n          sortable: true\r\n        },\r\n        description: {\r\n          label: \"Opis\"\r\n        }\r\n      },\r\n      items: [],\r\n      editDoctor: null,\r\n      editPantient: null,\r\n      editDescription: \"\",\r\n      editDate: null,\r\n      editTime: null,\r\n      selected: null,\r\n      page: 1,\r\n      totalPage: 3,\r\n      pantients: [],\r\n      doctors: [],\r\n      freeDate: [],\r\n      freeDay: [],\r\n      freeHour: []\r\n    };\r\n  },\r\n  methods: {\r\n    getDate(date) {\r\n      return moment(date).format(\"HH:mm DD-MM-YYYY\");\r\n    },\r\n    select(items) {\r\n      this.selected = items[0];\r\n    },\r\n    remove() {\r\n      const { doctor, pantient, date, id } = this.selected;\r\n      this.$bvModal\r\n        .msgBoxConfirm(\r\n          `Czy chcesz usunąć wizytę ${pantient} u ${doctor} ${moment(\r\n            date\r\n          ).format(\"HH:mm DD.MM.YYYY\")} ?`,\r\n          {\r\n            title: \"Usuwanie wizyty\",\r\n            size: \"sm\",\r\n            buttonSize: \"sm\",\r\n            okVariant: \"secondary\",\r\n            cancelVariant: \"primary\",\r\n            okTitle: \"Usuń\",\r\n            cancelTitle: \"Nie\",\r\n            footerClass: \"p-2\",\r\n            hideHeaderClose: true,\r\n            centered: true\r\n          }\r\n        )\r\n        .then(async () => {\r\n          const response = await this.$api.delete(`visit/remove/${id}`);\r\n          const data = response.data;\r\n          if (data.item) {\r\n            this.$bvToast.toast(\"Usunięto dane.\", {\r\n              title: \"Usuwanie wizyty.\",\r\n              autoHideDelay: 5000\r\n            });\r\n          }\r\n          if (data.error) {\r\n            const error = data.error;\r\n            if (error.original)\r\n              this.$bvToast.toast(error.original.detail, {\r\n                title: \"Usuwanie wizyty.\",\r\n                autoHideDelay: 5000,\r\n                appendToast: true\r\n              });\r\n            if (error.errors.length) {\r\n              let description = \"\";\r\n              description = error.errors.map(error => error.path).join(\", \");\r\n              this.$bvToast.toast(`Niepoprawne dane w polach ${description}.`, {\r\n                title: \"Usuwanie wizyty.\",\r\n                autoHideDelay: 5000,\r\n                appendToast: true\r\n              });\r\n            }\r\n          }\r\n          this.loadVisit();\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    },\r\n    edit() {\r\n      const { doctor, pantient, date, description } = this.selected;\r\n      this.editDoctor = doctor;\r\n      this.editPantient = pantient;\r\n      this.loadFreeDays(this.selectedDoctor.id);\r\n      this.editDate = moment(date).format(\"DD.MM.YYYY\");\r\n      this.editTime = moment(date).format(\"HH:mm\");\r\n      this.editDescription = description;\r\n      this.$refs[\"edit\"].show();\r\n    },\r\n    add() {\r\n      this.$refs[\"edit\"].show();\r\n    },\r\n    cancel() {\r\n      this.selected = null;\r\n      this.editDoctor = null;\r\n      this.editPantient = null;\r\n      this.editDate = null;\r\n      this.editTime = null;\r\n      this.editDescription = \"\";\r\n      this.$refs.table.clearSelected();\r\n    },\r\n    async ok() {\r\n      let change = false;\r\n       const date = moment.utc(this.editDate + \" \" + this.editTime, \"DD-MM-YYYY HH:mm\").toDate();\r\n      if (this.selected) {\r\n        const response = await this.$api.post(`visit/edit`, {\r\n          id: this.selected.id,\r\n          doctorId: this.selectedDoctor.id,\r\n          pantientId: this.selectedPantient.id,\r\n          date,\r\n          description: this.editDescription\r\n        });\r\n        const data = response.data;\r\n        if (data.item) {\r\n          this.$bvToast.toast(\"Zmieniono dane.\", {\r\n            title: \"Edycja wizyty.\",\r\n            autoHideDelay: 5000\r\n          });\r\n          change = true;\r\n        }\r\n        if (data.error) {\r\n          const error = data.error;\r\n          if (error.original)\r\n            this.$bvToast.toast(error.original.detail, {\r\n              title: \"Edycja wizyty.\",\r\n              autoHideDelay: 5000,\r\n              appendToast: true\r\n            });\r\n          if (error.errors.length) {\r\n            let description = \"\";\r\n            description = error.errors.map(error => error.path).join(\", \");\r\n            this.$bvToast.toast(`Niepoprawne dane w polach ${description}.`, {\r\n              title: \"Edycja wizyty.\",\r\n              autoHideDelay: 5000,\r\n              appendToast: true\r\n            });\r\n          }\r\n        }\r\n      } else {\r\n        const response = await this.$api.post(`visit/add`, {\r\n          doctorId: this.selectedDoctor.id,\r\n          pantientId: this.selectedPantient.id,\r\n          date,\r\n          description: this.editDescription\r\n        });\r\n        const data = response.data;\r\n        if (data.item) {\r\n          this.$bvToast.toast(\"Dodano wizytę.\", {\r\n            title: \"Dodawanie wizyty.\",\r\n            autoHideDelay: 5000\r\n          });\r\n          change = true;\r\n        }\r\n        if (data.error) {\r\n          const error = data.error;\r\n          if (error.original)\r\n            this.$bvToast.toast(error.original.detail, {\r\n              title: \"Dodawanie wizyty.\",\r\n              autoHideDelay: 5000,\r\n              appendToast: true\r\n            });\r\n          if (error.errors.length) {\r\n            let description = \"\";\r\n            description = error.errors.map(error => error.path).join(\", \");\r\n            this.$bvToast.toast(`Niepoprawne dane w polach ${description}.`, {\r\n              title: \"Dodawanie wizyty.\",\r\n              autoHideDelay: 5000,\r\n              appendToast: true\r\n            });\r\n          }\r\n        }\r\n      }\r\n      if (change) {\r\n        this.$refs.table.clearSelected();\r\n        this.editDoctor = null;\r\n        this.editPantient = null;\r\n        this.editDate = null;\r\n        this.editTime = null;\r\n        this.editDescription = \"\";\r\n      }\r\n      this.loadVisit();\r\n    },\r\n    changeHour() {\r\n      if (!this.editTime) {\r\n        this.editDate = null;\r\n      }\r\n    },\r\n    changeDoctor() {\r\n      if (this.selectedDoctor) {\r\n        this.loadFreeDays(this.selectedDoctor.id);\r\n      }\r\n    },\r\n    changeDate() {\r\n      if (this.editDate) {\r\n        this.loadFreeHour();\r\n      }\r\n      this.editTime = null;\r\n    },\r\n    changePage(id) {\r\n      var router = \"/visit\";\r\n      if (id > 1) router += \"/\" + id;\r\n      this.$router.push(router);\r\n      this.loadVisit();\r\n    },\r\n    async loadVisit() {\r\n      this.page = this.$route.params.id;\r\n      if (this.page === undefined) this.page = 1;\r\n      this.$api\r\n        .get(`visits/${this.page - 1}`)\r\n        .then(response => {\r\n          const { count, rows } = response.data;\r\n          this.items = rows;\r\n          this.totalPage = Math.ceil(count / 100);\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    },\r\n    async loadPantients() {\r\n      this.$api\r\n        .get(`allpantients`)\r\n        .then(response => {\r\n          this.pantients = response.data.items;\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    },\r\n    loadDoctors() {\r\n      this.$api\r\n        .get(`alldoctors`)\r\n        .then(response => {\r\n          this.doctors = response.data.items;\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    },\r\n    loadFreeDays(doctorId) {\r\n      this.$api\r\n        .get(`/visit/day/${doctorId}`)\r\n        .then(response => {\r\n          this.freeDate = response.data;\r\n          this.freeDay = this.freeDate.map(data =>\r\n            moment(data).format(\"DD.MM.YYYY\")\r\n          );\r\n          this.freeDay = this.freeDay.filter(\r\n            (v, i) => this.freeDay.indexOf(v) === i\r\n          );\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    },\r\n    loadFreeHour() {\r\n      if (this.freeDay.length > 0) {\r\n        this.freeHour = this.freeDate\r\n          .map(data => moment(data).format(\"DD.MM.YYYY HH:mm\"))\r\n          .filter(date => date.includes(this.editDate))\r\n          .map(date => date.substring(date.length - 6, date.length));\r\n      }\r\n    }\r\n  },\r\n\r\n  created() {\r\n    this.loadVisit();\r\n    this.loadPantients();\r\n    this.loadDoctors();\r\n  }\r\n};\r\n</script>\r\n<style scoped>\r\n#visit {\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n.searchBar {\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: flex-start;\r\n  align-items: flex-start;\r\n  padding: 5px 0px;\r\n}\r\n.button-container {\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: flex-end;\r\n  padding-right: 0px;\r\n}\r\n</style>\r\n"]}]}