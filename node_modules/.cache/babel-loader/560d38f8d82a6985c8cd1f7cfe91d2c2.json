{"remainingRequest":"D:\\myDoctor-web\\node_modules\\babel-loader\\lib\\index.js!D:\\myDoctor-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\myDoctor-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\myDoctor-web\\src\\views\\Visit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\myDoctor-web\\src\\views\\Visit.vue","mtime":1561666877123},{"path":"D:\\myDoctor-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\myDoctor-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\myDoctor-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\myDoctor-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"D:\\\\myDoctor-web\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.regexp.split\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport moment from \"moment\";\nexport default {\n  name: \"visit\",\n  components: {},\n  computed: {\n    selectedDoctor: function selectedDoctor() {\n      var item = null;\n\n      if (this.editDoctor) {\n        var split = this.editDoctor.split(\" \");\n        var firstname = split[0];\n        var lastname = split[1];\n        item = this.doctors.find(function (item) {\n          return item.firstname === firstname && item.lastname === lastname;\n        });\n      }\n\n      return item;\n    },\n    selectedPantient: function selectedPantient() {\n      var item = null;\n\n      if (this.editPantient) {\n        var split = this.editPantient.split(\" \");\n        var firstname = split[0];\n        var lastname = split[1];\n        item = this.pantients.find(function (item) {\n          return item.firstname === firstname && item.lastname === lastname;\n        });\n      }\n\n      return item;\n    }\n  },\n  data: function data() {\n    return {\n      fields: {\n        doctor: {\n          label: \"Doktor\",\n          sortable: true\n        },\n        date: {\n          label: \"Godzina i data wizyty\",\n          sortable: true\n        },\n        pantient: {\n          label: \"Nazwisko i imię pacjenta\",\n          sortable: true\n        },\n        description: {\n          label: \"Opis\"\n        }\n      },\n      items: [],\n      editDoctor: null,\n      editPantient: null,\n      editDescription: \"\",\n      editDate: null,\n      editTime: null,\n      selected: null,\n      page: 1,\n      totalPage: 3,\n      pantients: [],\n      doctors: [],\n      freeDate: [],\n      freeDay: [],\n      freeHour: []\n    };\n  },\n  methods: {\n    getDate: function getDate(date) {\n      return moment(date).format(\"HH:mm DD-MM-YYYY\");\n    },\n    select: function select(items) {\n      this.selected = items[0];\n    },\n    remove: function remove() {\n      var _this = this;\n\n      var _this$selected = this.selected,\n          doctor = _this$selected.doctor,\n          pantient = _this$selected.pantient,\n          date = _this$selected.date,\n          id = _this$selected.id;\n      this.$bvModal.msgBoxConfirm(\"Czy chcesz usun\\u0105\\u0107 wizyt\\u0119 \".concat(pantient, \" u \").concat(doctor, \" \").concat(moment(date).format(\"HH:mm DD.MM.YYYY\"), \" ?\"), {\n        title: \"Usuwanie wizyty\",\n        size: \"sm\",\n        buttonSize: \"sm\",\n        okVariant: \"secondary\",\n        cancelVariant: \"primary\",\n        okTitle: \"Usuń\",\n        cancelTitle: \"Nie\",\n        footerClass: \"p-2\",\n        hideHeaderClose: true,\n        centered: true\n      }).then(\n      /*#__PURE__*/\n      _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var response, data, error, description;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this.$api.delete(\"visit/remove/\".concat(id));\n\n              case 2:\n                response = _context.sent;\n                data = response.data;\n\n                if (data.item) {\n                  _this.$bvToast.toast(\"Usunięto dane.\", {\n                    title: \"Usuwanie wizyty.\",\n                    autoHideDelay: 5000\n                  });\n                }\n\n                if (data.error) {\n                  error = data.error;\n                  if (error.original) _this.$bvToast.toast(error.original.detail, {\n                    title: \"Usuwanie wizyty.\",\n                    autoHideDelay: 5000,\n                    appendToast: true\n                  });\n\n                  if (error.errors.length) {\n                    description = \"\";\n                    description = error.errors.map(function (error) {\n                      return error.path;\n                    }).join(\", \");\n\n                    _this.$bvToast.toast(\"Niepoprawne dane w polach \".concat(description, \".\"), {\n                      title: \"Usuwanie wizyty.\",\n                      autoHideDelay: 5000,\n                      appendToast: true\n                    });\n                  }\n                }\n\n                _this.loadVisit();\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))).catch(function (error) {\n        console.log(error);\n      });\n    },\n    edit: function edit() {\n      var _this$selected2 = this.selected,\n          doctor = _this$selected2.doctor,\n          pantient = _this$selected2.pantient,\n          date = _this$selected2.date,\n          description = _this$selected2.description;\n      this.editDoctor = doctor;\n      this.editPantient = pantient;\n      this.loadFreeDays(this.selectedDoctor.id);\n      this.editDate = moment(date).format(\"DD.MM.YYYY\");\n      this.editTime = moment(date).format(\"HH:mm\");\n      this.editDescription = description;\n      this.$refs[\"edit\"].show();\n    },\n    add: function add() {\n      this.$refs[\"edit\"].show();\n    },\n    cancel: function cancel() {\n      this.selected = null;\n      this.editDoctor = null;\n      this.editPantient = null;\n      this.editDate = null;\n      this.editTime = null;\n      this.editDescription = \"\";\n      this.$refs.table.clearSelected();\n    },\n    ok: function () {\n      var _ok = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var change, date, response, data, error, description, _response, _data, _error, _description;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                change = false;\n                date = moment.utc(this.editDate + \" \" + this.editTime, \"DD-MM-YYYY HH:mm\").toDate();\n\n                if (!this.selected) {\n                  _context2.next = 11;\n                  break;\n                }\n\n                _context2.next = 5;\n                return this.$api.post(\"visit/edit\", {\n                  id: this.selected.id,\n                  doctorId: this.selectedDoctor.id,\n                  pantientId: this.selectedPantient.id,\n                  date: date,\n                  description: this.editDescription\n                });\n\n              case 5:\n                response = _context2.sent;\n                data = response.data;\n\n                if (data.item) {\n                  this.$bvToast.toast(\"Zmieniono dane.\", {\n                    title: \"Edycja wizyty.\",\n                    autoHideDelay: 5000\n                  });\n                  change = true;\n                }\n\n                if (data.error) {\n                  error = data.error;\n                  if (error.original) this.$bvToast.toast(error.original.detail, {\n                    title: \"Edycja wizyty.\",\n                    autoHideDelay: 5000,\n                    appendToast: true\n                  });\n\n                  if (error.errors.length) {\n                    description = \"\";\n                    description = error.errors.map(function (error) {\n                      return error.path;\n                    }).join(\", \");\n                    this.$bvToast.toast(\"Niepoprawne dane w polach \".concat(description, \".\"), {\n                      title: \"Edycja wizyty.\",\n                      autoHideDelay: 5000,\n                      appendToast: true\n                    });\n                  }\n                }\n\n                _context2.next = 17;\n                break;\n\n              case 11:\n                _context2.next = 13;\n                return this.$api.post(\"visit/add\", {\n                  doctorId: this.selectedDoctor.id,\n                  pantientId: this.selectedPantient.id,\n                  date: date,\n                  description: this.editDescription\n                });\n\n              case 13:\n                _response = _context2.sent;\n                _data = _response.data;\n\n                if (_data.item) {\n                  this.$bvToast.toast(\"Dodano wizytę.\", {\n                    title: \"Dodawanie wizyty.\",\n                    autoHideDelay: 5000\n                  });\n                  change = true;\n                }\n\n                if (_data.error) {\n                  _error = _data.error;\n                  if (_error.original) this.$bvToast.toast(_error.original.detail, {\n                    title: \"Dodawanie wizyty.\",\n                    autoHideDelay: 5000,\n                    appendToast: true\n                  });\n\n                  if (_error.errors.length) {\n                    _description = \"\";\n                    _description = _error.errors.map(function (error) {\n                      return error.path;\n                    }).join(\", \");\n                    this.$bvToast.toast(\"Niepoprawne dane w polach \".concat(_description, \".\"), {\n                      title: \"Dodawanie wizyty.\",\n                      autoHideDelay: 5000,\n                      appendToast: true\n                    });\n                  }\n                }\n\n              case 17:\n                if (change) {\n                  this.$refs.table.clearSelected();\n                  this.editDoctor = null;\n                  this.editPantient = null;\n                  this.editDate = null;\n                  this.editTime = null;\n                  this.editDescription = \"\";\n                }\n\n                this.loadVisit();\n\n              case 19:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function ok() {\n        return _ok.apply(this, arguments);\n      }\n\n      return ok;\n    }(),\n    changeHour: function changeHour() {\n      if (!this.editTime) {\n        this.editDate = null;\n      }\n    },\n    changeDoctor: function changeDoctor() {\n      if (this.selectedDoctor) {\n        this.loadFreeDays(this.selectedDoctor.id);\n      }\n    },\n    changeDate: function changeDate() {\n      if (this.editDate) {\n        this.loadFreeHour();\n      }\n\n      this.editTime = null;\n    },\n    changePage: function changePage(id) {\n      var router = \"/visit\";\n      if (id > 1) router += \"/\" + id;\n      this.$router.push(router);\n      this.loadVisit();\n    },\n    loadVisit: function () {\n      var _loadVisit = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3() {\n        var _this2 = this;\n\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.page = this.$route.params.id;\n                if (this.page === undefined) this.page = 1;\n                this.$api.get(\"visits/\".concat(this.page - 1)).then(function (response) {\n                  var _response$data = response.data,\n                      count = _response$data.count,\n                      rows = _response$data.rows;\n                  _this2.items = rows;\n                  _this2.totalPage = Math.ceil(count / 100);\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadVisit() {\n        return _loadVisit.apply(this, arguments);\n      }\n\n      return loadVisit;\n    }(),\n    loadPantients: function () {\n      var _loadPantients = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4() {\n        var _this3 = this;\n\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                this.$api.get(\"allpantients\").then(function (response) {\n                  _this3.pantients = response.data.items;\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function loadPantients() {\n        return _loadPantients.apply(this, arguments);\n      }\n\n      return loadPantients;\n    }(),\n    loadDoctors: function loadDoctors() {\n      var _this4 = this;\n\n      this.$api.get(\"alldoctors\").then(function (response) {\n        _this4.doctors = response.data.items;\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    loadFreeDays: function loadFreeDays(doctorId) {\n      var _this5 = this;\n\n      this.$api.get(\"/visit/day/\".concat(doctorId)).then(function (response) {\n        _this5.freeDate = response.data;\n        _this5.freeDay = _this5.freeDate.map(function (data) {\n          return moment(data).format(\"DD.MM.YYYY\");\n        });\n        _this5.freeDay = _this5.freeDay.filter(function (v, i) {\n          return _this5.freeDay.indexOf(v) === i;\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    loadFreeHour: function loadFreeHour() {\n      var _this6 = this;\n\n      if (this.freeDay.length > 0) {\n        this.freeHour = this.freeDate.map(function (data) {\n          return moment(data).format(\"DD.MM.YYYY HH:mm\");\n        }).filter(function (date) {\n          return date.includes(_this6.editDate);\n        }).map(function (date) {\n          return date.substring(date.length - 6, date.length);\n        });\n      }\n    }\n  },\n  created: function created() {\n    this.loadVisit();\n    this.loadPantients();\n    this.loadDoctors();\n  }\n};",{"version":3,"sources":["Visit.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div id=\"visit\">\r\n    <h1>Wizyty</h1>\r\n    <div class=\"searchBar\">\r\n      <b-button variant=\"primary\" :disabled=\"!!selected\" @click=\"add\">Dodaj</b-button>\r\n      <b-button variant=\"secondary\" :disabled=\"!selected\" @click=\"edit\">Edytuj</b-button>\r\n      <b-button variant=\"danger\" :disabled=\"!selected\" @click=\"remove\">Usuń</b-button>\r\n    </div>\r\n    <!-- <div class=\"searchBar\">\r\n      <b-form-select v-model=\"selectedDoctor\" :options=\"filterDoctors\" class=\"col-3\"></b-form-select>\r\n      <b-form-input v-model=\"selectedDate\" type=\"date\" class=\"col-3\"></b-form-input>\r\n      <b-form-select v-model=\"selectedPantient\" :options=\"filterPantients\" class=\"col-3\"></b-form-select>\r\n    </div>-->\r\n    <b-table\r\n      ref=\"table\"\r\n      selectable\r\n      select-mode=\"single\"\r\n      @row-selected=\"select\"\r\n      striped\r\n      hover\r\n      small\r\n      fixed\r\n      :items=\"items\"\r\n      :fields=\"fields\"\r\n    >\r\n      <template slot=\"date\" slot-scope=\"data\">{{ getDate(data.item.date) }}</template>\r\n    </b-table>\r\n    <b-pagination\r\n      v-model=\"page\"\r\n      :total-rows=\"totalPage\"\r\n      per-page=\"1\"\r\n      class=\"my-0\"\r\n      @change=\"changePage\"\r\n    ></b-pagination>\r\n    <b-modal\r\n      ref=\"edit\"\r\n      :title=\"selected !== null ? 'Edycja wizyty':'Dodaj wizytę'\"\r\n      centered\r\n      @ok=\"ok\"\r\n      @cancel=\"cancel\"\r\n    >\r\n      <b-form-input\r\n        list=\"doctors\"\r\n        v-model=\"editDoctor\"\r\n        placeholder=\"Wybierz lekarza\"\r\n        @change=\"changeDoctor\"\r\n      ></b-form-input>\r\n      <datalist id=\"doctors\">\r\n        <option\r\n          v-for=\"doctor in doctors\"\r\n          v-bind:key=\"doctor.id\"\r\n        >{{ doctor.firstname + ' '+doctor.lastname}}</option>\r\n      </datalist>\r\n      <b-form-input list=\"pantients\" v-model=\"editPantient\" placeholder=\"Wybierz pacjenta\"></b-form-input>\r\n      <datalist id=\"pantients\">\r\n        <option\r\n          v-for=\"pantient in pantients\"\r\n          v-bind:key=\"pantient.id\"\r\n        >{{ pantient.firstname + ' '+pantient.lastname}}</option>\r\n      </datalist>\r\n      <b-form-input list=\"dates\" v-model=\"editDate\" placeholder=\"Wybierz datę\" @change=\"changeDate\"></b-form-input>\r\n      <datalist id=\"dates\">\r\n        <option v-for=\"day in freeDay\" v-bind:key=\"day\">{{ day }}</option>\r\n      </datalist>\r\n      <b-form-input\r\n        list=\"hours\"\r\n        v-model=\"editTime\"\r\n        placeholder=\"Wybierz godzinę\"\r\n        @change=\"changeHour\"\r\n      ></b-form-input>\r\n      <datalist id=\"hours\">\r\n        <option v-for=\"hour in freeHour\" v-bind:key=\"hour\">{{ hour }}</option>\r\n      </datalist>\r\n      <b-form-input v-model=\"editDescription\" placeholder=\"Podaj opis\" type=\"text\"></b-form-input>\r\n    </b-modal>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport moment from \"moment\";\r\nexport default {\r\n  name: \"visit\",\r\n  components: {},\r\n  computed: {\r\n    selectedDoctor() {\r\n      let item = null;\r\n      if (this.editDoctor) {\r\n        const split = this.editDoctor.split(\" \");\r\n        const firstname = split[0];\r\n        const lastname = split[1];\r\n        item = this.doctors.find(\r\n          item => item.firstname === firstname && item.lastname === lastname\r\n        );\r\n      }\r\n      return item;\r\n    },\r\n    selectedPantient() {\r\n      let item = null;\r\n      if (this.editPantient) {\r\n        const split = this.editPantient.split(\" \");\r\n        const firstname = split[0];\r\n        const lastname = split[1];\r\n        item = this.pantients.find(\r\n          item => item.firstname === firstname && item.lastname === lastname\r\n        );\r\n      }\r\n      return item;\r\n    }\r\n  },\r\n  data: () => {\r\n    return {\r\n      fields: {\r\n        doctor: {\r\n          label: \"Doktor\",\r\n          sortable: true\r\n        },\r\n        date: {\r\n          label: \"Godzina i data wizyty\",\r\n          sortable: true\r\n        },\r\n        pantient: {\r\n          label: \"Nazwisko i imię pacjenta\",\r\n          sortable: true\r\n        },\r\n        description: {\r\n          label: \"Opis\"\r\n        }\r\n      },\r\n      items: [],\r\n      editDoctor: null,\r\n      editPantient: null,\r\n      editDescription: \"\",\r\n      editDate: null,\r\n      editTime: null,\r\n      selected: null,\r\n      page: 1,\r\n      totalPage: 3,\r\n      pantients: [],\r\n      doctors: [],\r\n      freeDate: [],\r\n      freeDay: [],\r\n      freeHour: []\r\n    };\r\n  },\r\n  methods: {\r\n    getDate(date) {\r\n      return moment(date).format(\"HH:mm DD-MM-YYYY\");\r\n    },\r\n    select(items) {\r\n      this.selected = items[0];\r\n    },\r\n    remove() {\r\n      const { doctor, pantient, date, id } = this.selected;\r\n      this.$bvModal\r\n        .msgBoxConfirm(\r\n          `Czy chcesz usunąć wizytę ${pantient} u ${doctor} ${moment(\r\n            date\r\n          ).format(\"HH:mm DD.MM.YYYY\")} ?`,\r\n          {\r\n            title: \"Usuwanie wizyty\",\r\n            size: \"sm\",\r\n            buttonSize: \"sm\",\r\n            okVariant: \"secondary\",\r\n            cancelVariant: \"primary\",\r\n            okTitle: \"Usuń\",\r\n            cancelTitle: \"Nie\",\r\n            footerClass: \"p-2\",\r\n            hideHeaderClose: true,\r\n            centered: true\r\n          }\r\n        )\r\n        .then(async () => {\r\n          const response = await this.$api.delete(`visit/remove/${id}`);\r\n          const data = response.data;\r\n          if (data.item) {\r\n            this.$bvToast.toast(\"Usunięto dane.\", {\r\n              title: \"Usuwanie wizyty.\",\r\n              autoHideDelay: 5000\r\n            });\r\n          }\r\n          if (data.error) {\r\n            const error = data.error;\r\n            if (error.original)\r\n              this.$bvToast.toast(error.original.detail, {\r\n                title: \"Usuwanie wizyty.\",\r\n                autoHideDelay: 5000,\r\n                appendToast: true\r\n              });\r\n            if (error.errors.length) {\r\n              let description = \"\";\r\n              description = error.errors.map(error => error.path).join(\", \");\r\n              this.$bvToast.toast(`Niepoprawne dane w polach ${description}.`, {\r\n                title: \"Usuwanie wizyty.\",\r\n                autoHideDelay: 5000,\r\n                appendToast: true\r\n              });\r\n            }\r\n          }\r\n          this.loadVisit();\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    },\r\n    edit() {\r\n      const { doctor, pantient, date, description } = this.selected;\r\n      this.editDoctor = doctor;\r\n      this.editPantient = pantient;\r\n      this.loadFreeDays(this.selectedDoctor.id);\r\n      this.editDate = moment(date).format(\"DD.MM.YYYY\");\r\n      this.editTime = moment(date).format(\"HH:mm\");\r\n      this.editDescription = description;\r\n      this.$refs[\"edit\"].show();\r\n    },\r\n    add() {\r\n      this.$refs[\"edit\"].show();\r\n    },\r\n    cancel() {\r\n      this.selected = null;\r\n      this.editDoctor = null;\r\n      this.editPantient = null;\r\n      this.editDate = null;\r\n      this.editTime = null;\r\n      this.editDescription = \"\";\r\n      this.$refs.table.clearSelected();\r\n    },\r\n    async ok() {\r\n      let change = false;\r\n       const date = moment.utc(this.editDate + \" \" + this.editTime, \"DD-MM-YYYY HH:mm\").toDate();\r\n      if (this.selected) {\r\n        const response = await this.$api.post(`visit/edit`, {\r\n          id: this.selected.id,\r\n          doctorId: this.selectedDoctor.id,\r\n          pantientId: this.selectedPantient.id,\r\n          date,\r\n          description: this.editDescription\r\n        });\r\n        const data = response.data;\r\n        if (data.item) {\r\n          this.$bvToast.toast(\"Zmieniono dane.\", {\r\n            title: \"Edycja wizyty.\",\r\n            autoHideDelay: 5000\r\n          });\r\n          change = true;\r\n        }\r\n        if (data.error) {\r\n          const error = data.error;\r\n          if (error.original)\r\n            this.$bvToast.toast(error.original.detail, {\r\n              title: \"Edycja wizyty.\",\r\n              autoHideDelay: 5000,\r\n              appendToast: true\r\n            });\r\n          if (error.errors.length) {\r\n            let description = \"\";\r\n            description = error.errors.map(error => error.path).join(\", \");\r\n            this.$bvToast.toast(`Niepoprawne dane w polach ${description}.`, {\r\n              title: \"Edycja wizyty.\",\r\n              autoHideDelay: 5000,\r\n              appendToast: true\r\n            });\r\n          }\r\n        }\r\n      } else {\r\n        const response = await this.$api.post(`visit/add`, {\r\n          doctorId: this.selectedDoctor.id,\r\n          pantientId: this.selectedPantient.id,\r\n          date,\r\n          description: this.editDescription\r\n        });\r\n        const data = response.data;\r\n        if (data.item) {\r\n          this.$bvToast.toast(\"Dodano wizytę.\", {\r\n            title: \"Dodawanie wizyty.\",\r\n            autoHideDelay: 5000\r\n          });\r\n          change = true;\r\n        }\r\n        if (data.error) {\r\n          const error = data.error;\r\n          if (error.original)\r\n            this.$bvToast.toast(error.original.detail, {\r\n              title: \"Dodawanie wizyty.\",\r\n              autoHideDelay: 5000,\r\n              appendToast: true\r\n            });\r\n          if (error.errors.length) {\r\n            let description = \"\";\r\n            description = error.errors.map(error => error.path).join(\", \");\r\n            this.$bvToast.toast(`Niepoprawne dane w polach ${description}.`, {\r\n              title: \"Dodawanie wizyty.\",\r\n              autoHideDelay: 5000,\r\n              appendToast: true\r\n            });\r\n          }\r\n        }\r\n      }\r\n      if (change) {\r\n        this.$refs.table.clearSelected();\r\n        this.editDoctor = null;\r\n        this.editPantient = null;\r\n        this.editDate = null;\r\n        this.editTime = null;\r\n        this.editDescription = \"\";\r\n      }\r\n      this.loadVisit();\r\n    },\r\n    changeHour() {\r\n      if (!this.editTime) {\r\n        this.editDate = null;\r\n      }\r\n    },\r\n    changeDoctor() {\r\n      if (this.selectedDoctor) {\r\n        this.loadFreeDays(this.selectedDoctor.id);\r\n      }\r\n    },\r\n    changeDate() {\r\n      if (this.editDate) {\r\n        this.loadFreeHour();\r\n      }\r\n      this.editTime = null;\r\n    },\r\n    changePage(id) {\r\n      var router = \"/visit\";\r\n      if (id > 1) router += \"/\" + id;\r\n      this.$router.push(router);\r\n      this.loadVisit();\r\n    },\r\n    async loadVisit() {\r\n      this.page = this.$route.params.id;\r\n      if (this.page === undefined) this.page = 1;\r\n      this.$api\r\n        .get(`visits/${this.page - 1}`)\r\n        .then(response => {\r\n          const { count, rows } = response.data;\r\n          this.items = rows;\r\n          this.totalPage = Math.ceil(count / 100);\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    },\r\n    async loadPantients() {\r\n      this.$api\r\n        .get(`allpantients`)\r\n        .then(response => {\r\n          this.pantients = response.data.items;\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    },\r\n    loadDoctors() {\r\n      this.$api\r\n        .get(`alldoctors`)\r\n        .then(response => {\r\n          this.doctors = response.data.items;\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    },\r\n    loadFreeDays(doctorId) {\r\n      this.$api\r\n        .get(`/visit/day/${doctorId}`)\r\n        .then(response => {\r\n          this.freeDate = response.data;\r\n          this.freeDay = this.freeDate.map(data =>\r\n            moment(data).format(\"DD.MM.YYYY\")\r\n          );\r\n          this.freeDay = this.freeDay.filter(\r\n            (v, i) => this.freeDay.indexOf(v) === i\r\n          );\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    },\r\n    loadFreeHour() {\r\n      if (this.freeDay.length > 0) {\r\n        this.freeHour = this.freeDate\r\n          .map(data => moment(data).format(\"DD.MM.YYYY HH:mm\"))\r\n          .filter(date => date.includes(this.editDate))\r\n          .map(date => date.substring(date.length - 6, date.length));\r\n      }\r\n    }\r\n  },\r\n\r\n  created() {\r\n    this.loadVisit();\r\n    this.loadPantients();\r\n    this.loadDoctors();\r\n  }\r\n};\r\n</script>\r\n<style scoped>\r\n#visit {\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n.searchBar {\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: flex-start;\r\n  align-items: flex-start;\r\n  padding: 5px 0px;\r\n}\r\n.button-container {\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: flex-end;\r\n  padding-right: 0px;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/views"}]}